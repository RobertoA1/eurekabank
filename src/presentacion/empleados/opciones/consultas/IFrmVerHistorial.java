/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion.empleados.opciones.consultas;

import presentacion.clientes.opciones.cuentas.*;
import presentacion.empleados.opciones.registros.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import validaciones.*;
import entidades.*;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;
import presentacion.FrmClientes;
import seguridad.Autenticacion;
import seguridad.Contrasenas;

/**
 *
 * @author Roberto
 */
public class IFrmVerHistorial extends javax.swing.JInternalFrame {
    public static IFrmVerHistorial form = null;
    private ArrayList<Movimiento> movimientos = null;
    
    /**
     * Creates new form FrmDatosCuentaObtenidos
     */
    private IFrmVerHistorial(Cuenta cuenta) {
        initComponents();
        try {
            Usuario usuario = Autenticacion.obtenerUsuario();
            Cliente cliente = Clientes.obtenerClientePorUsuario(usuario.getCodigo());
            tipSaludo.setText("Accediste a la cuenta " + cuenta.getCodigo());
            tipHistorialMovimientos.setText("Este es el historial de movimientos de la cuenta " + cuenta.getCodigo() + ":");
            
            rellenarInfoTabla(cuenta);
        } catch (IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        } catch (IllegalStateException e){
            JOptionPane.showMessageDialog(this, "Autenticación | No se puede continuar: No existe una sesión iniciada.", "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        } catch (SQLException e){
            JOptionPane.showMessageDialog(this, "Datos de una Cuenta | Ha ocurrido un problema mientras nos conectabamos a la BD. Por favor, cierra el programa y vuelve a intentarlo.", "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloPanel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tipSaludo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCuentas = new javax.swing.JTable();
        tipHistorialMovimientos = new javax.swing.JLabel();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(20, 45, 68));

        tituloPanel.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        tituloPanel.setForeground(new java.awt.Color(229, 229, 229));
        tituloPanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloPanel.setText("Estás viendo el historial de movimientos de una cuenta");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tituloPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tituloPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 70));

        jPanel2.setBackground(new java.awt.Color(229, 229, 229));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tipSaludo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tipSaludo.setForeground(new java.awt.Color(0, 0, 0));
        tipSaludo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tipSaludo.setText("Accediste a la cuenta cuentaPlaceholder");
        jPanel2.add(tipSaludo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 790, -1));

        jScrollPane1.setBackground(new java.awt.Color(229, 229, 229));

        tablaCuentas.setAutoCreateRowSorter(true);
        tablaCuentas.setBackground(new java.awt.Color(229, 229, 229));
        tablaCuentas.setForeground(new java.awt.Color(0, 0, 0));
        tablaCuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Fecha", "Movimiento", "Accion", "Importe", "Responsable", "Receptor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaCuentas.setGridColor(new java.awt.Color(229, 229, 229));
        tablaCuentas.setSelectionBackground(new java.awt.Color(30, 30, 30));
        jScrollPane1.setViewportView(tablaCuentas);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 720, 360));

        tipHistorialMovimientos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tipHistorialMovimientos.setForeground(new java.awt.Color(0, 0, 0));
        tipHistorialMovimientos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tipHistorialMovimientos.setText("Este es el historial de movimientos de la cuenta cuentaPlaceholder:");
        jPanel2.add(tipHistorialMovimientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 50, 790, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 790, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void rellenarInfoTabla(Cuenta cuenta){
        try {
            Object[] cols = {"Número", "Fecha", "Movimiento", "Accion", "Importe", "Responsable", "Receptor"};
            DefaultTableModel nuevaTabla = new DefaultTableModel();
            nuevaTabla.setColumnIdentifiers(cols);
            
            Object[] row = new Object[cols.length];
            
            movimientos = Movimientos.obtenerMovPorNumCuenta(cuenta.getCodigo());
            Iterator<Movimiento> iterador = movimientos.iterator();
            
            SimpleDateFormat formateadorFecha = new SimpleDateFormat("dd/MM/yyyy");
            
            while (iterador.hasNext()){
                Movimiento m = iterador.next();
                TipoMovimiento tm = TiposMovimiento.obtener(m.getTipoCodigo());
                row[0] = m.getMovinumero();
                
                String fecha = formateadorFecha.format(new java.util.Date(m.getFecha().getTime()));
                row[1] = fecha;
                
                row[2] = tm.getDescripcion();
                row[3] = tm.getAccion();
                row[4] = m.getImporte();
                row[5] = m.getEmplcodigo();
                row[6] = m.getCuenReferencia();
                if (m.getCuenReferencia().equalsIgnoreCase("")) row[6] = "No aplica";
                
                nuevaTabla.addRow(row);
                System.out.println("row agregado");
            }
            
            tablaCuentas.setModel(nuevaTabla);
        } catch (IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        } catch (IllegalStateException e){
            JOptionPane.showMessageDialog(this, "Autenticación | No se puede continuar: No existe una sesión iniciada.", "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        } catch (SQLException e){
            JOptionPane.showMessageDialog(this, "Datos de una Cuenta | Ha ocurrido un problema mientras nos conectabamos a la BD. Por favor, cierra el programa y vuelve a intentarlo.", "Un problema ha ocurrido...", JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }
    
    public static IFrmVerHistorial getInstance(Cuenta cuenta){
        form = new IFrmVerHistorial(cuenta);
        return form;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCuentas;
    private javax.swing.JLabel tipHistorialMovimientos;
    private javax.swing.JLabel tipSaludo;
    private javax.swing.JLabel tituloPanel;
    // End of variables declaration//GEN-END:variables
}
